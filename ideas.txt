Saprse contexts

Instead of persisting each register store through each clone, only store assignments and reads.
This is a memory / time trade off. Now a context object will be smaller in memory, and there may be many thousands of them, but looking up a value involves asking successive ancestors until finding a value.



Remove register stores

The idea of a register store is flawed. Originally it was to include a string of the type, and because the JVM wouldn't have access to actual Class objects of any local smali simplify.vm.types that were parsed. This can be solved by mapping register indexes to object values directly and derriving the type by looking at the object class. Local smali simplify.vm.types can be represented by a place-holder class, say, LocalSmaliClass, which would provide access to the actual class path. This would greatly simplify some odd code that maintains register store relationships, including when cloning contexts and reflecting or invoking methods.




Split method context into static method and non-static method contexts

This would make the code more obvious and would probably mean a lot less passing around "isStatic" variables.